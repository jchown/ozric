<MudDialog>
    <DialogContent>
        
        <MudExpansionPanel Text="Devices" MaxHeight="400">
            @foreach (var choice in Choices.Devices)
            {
                <div>
                    <span class="iconify" data-icon="@choice.Icon"></span>
                <MudCheckBox Checked="@IsSelected(choice)" Label="@choice.Name" />
                </div>
            }
        </MudExpansionPanel>
        
        <MudExpansionPanel Text="Logic" MaxHeight="400">
            @foreach (var choice in Choices.Logic)
            {
                <div>
                    <span class="iconify" data-icon="@choice.Icon"></span>
                    <MudCheckBox Checked="@IsSelected(choice)" CheckedChanged="(bool _) => SelectedChoice(choice)" Label="@choice.Name" />
                </div>
            }
        </MudExpansionPanel>
        
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="Submit" Disabled="@(!Selected)">Add</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }
    
    [Parameter] public AddNodeChoices Choices { get; set; }

    private bool Selected => selection.Count > 0;
    private readonly List<AddNodeChoice> selection = new();

    void Submit() => MudDialog.Close(DialogResult.Ok(selection));
    void Cancel() => MudDialog.Cancel();

    private bool IsSelected(AddNodeChoice choice)
    {
        return selection.Contains(choice);
    }

    private void SelectedChoice(AddNodeChoice choice)
    {
        if (IsSelected(choice))
            selection.Remove(choice);
        else
            selection.Add(choice);
    }

}